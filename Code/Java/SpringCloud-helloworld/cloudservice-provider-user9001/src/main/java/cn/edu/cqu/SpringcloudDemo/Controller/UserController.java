package cn.edu.cqu.SpringcloudDemo.Controller;import cn.edu.cqu.SpringcloudDemo.Model.MyJson;import cn.edu.cqu.SpringcloudDemo.Service.UserSerivce;import org.springframework.beans.factory.annotation.Value;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.ResponseBody;import org.springframework.web.bind.annotation.RestController;import javax.annotation.Resource;/** * @ author     ：alberto * @ date       ：Created in 2020/4/28 11:28 * @ description：用户服务响应控制器 */// @RestController 注解标记的Controller返回的直接就是JSON字符串, 可以直接给前端使用// @Controller 注解标记的Controller返回的一般是String或ModelAndView对象,// 用来指明保存在resources文件夹中的html文件, 相当于服务器渲染并返回一个页面到浏览器@RestControllerpublic class UserController {    @Resource    private UserSerivce userSerivce;    // 根据yml获取端口号    @Value("${server.port}")    private String serverPort;    // 响应请求    // 一般get开头的方法采用REST风格即为get, 其他需要上传数据的使用post    @GetMapping(value = "/user/getUser") // value对应前端传回请求    // 也可以使用 @RequestMapping(value = "/getUser", method = RequestMethod.GET)    @ResponseBody    public MyJson getUser(@RequestParam(value = "userId", required = true) int userId) {// 前端传入参数,        // 该函数的参数使用 @RequestParam(value = "变量名") 对象名 变量名(前端URI对应为/module1/getUser?userId=xxx),        // 也可以使用 @PathVariable 数据类型 变量名(前端URI对应为/module1/getUser/xxx, 且Mapping注解的value需要后添加/{变量名}, 即/module1/getUser/xxx),        // 也可以直接传入Model中的对象作为形参, 但要求前端变量名与Model中成员变量相同        return userSerivce.getUser(userId,serverPort);    }}